<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>深信服上网认证</title>
      <link href="/2024/06/26/%E4%B8%8A%E7%BD%91%E8%AE%A4%E8%AF%81/"/>
      <url>/2024/06/26/%E4%B8%8A%E7%BD%91%E8%AE%A4%E8%AF%81/</url>
      
        <content type="html"><![CDATA[<h3 id="1、每次重启电脑或者每天都会重定向到网络认证页面http-1-1-1-3-ac-portal-disclaimer-pc-html-image-20240626094042221-static-imgs-上网认证-image-20240626094042221-png"><a href="#1、每次重启电脑或者每天都会重定向到网络认证页面http-1-1-1-3-ac-portal-disclaimer-pc-html-image-20240626094042221-static-imgs-上网认证-image-20240626094042221-png" class="headerlink" title="1、每次重启电脑或者每天都会重定向到网络认证页面http://1.1.1.3/ac_portal/disclaimer/pc.html?![image-20240626094042221](../static/imgs/上网认证/image-20240626094042221.png)"></a>1、每次重启电脑或者每天都会重定向到网络认证页面<a href="http://1.1.1.3/ac_portal/disclaimer/pc.html?!%5Bimage-20240626094042221%5D(../static/imgs/%E4%B8%8A%E7%BD%91%E8%AE%A4%E8%AF%81/image-20240626094042221.png)">http://1.1.1.3/ac_portal/disclaimer/pc.html?![image-20240626094042221](../static/imgs/上网认证/image-20240626094042221.png)</a></h3><h3 id="2、依赖安装"><a href="#2、依赖安装" class="headerlink" title="2、依赖安装"></a>2、依赖安装</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pip install requests -i https://pypi.doubanio.com/simple</span><br></pre></td></tr></table></figure><h3 id="3、使用python脚本自动化认证网络"><a href="#3、使用python脚本自动化认证网络" class="headerlink" title="3、使用python脚本自动化认证网络"></a>3、使用python脚本自动化认证网络</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Time    : 2022/1/13 22:01</span></span><br><span class="line"><span class="comment"># @Author  : CYX</span></span><br><span class="line"><span class="comment"># @Email   : im.cyx@foxmail.com</span></span><br><span class="line"><span class="comment"># @File    : login_network.py</span></span><br><span class="line"><span class="comment"># @Software: PyCharm</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> msvcrt</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使cmd能够正确输出颜色</span></span><br><span class="line"><span class="keyword">if</span> os.name == <span class="string">&quot;nt&quot;</span>:</span><br><span class="line">    os.system(<span class="string">&quot;&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 切换工作目录到系统临时文件区域</span></span><br><span class="line">os.chdir(os.getenv(<span class="string">&#x27;TMP&#x27;</span>))</span><br><span class="line"><span class="comment"># 文件名称</span></span><br><span class="line">file_name = <span class="string">&quot;user_account.json&quot;</span></span><br><span class="line"><span class="comment"># 如果不存在临时文件，根据输入新建临时文件保存账号密码</span></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(file_name):</span><br><span class="line">    <span class="comment"># 输入账号密码</span></span><br><span class="line">    account = <span class="built_in">input</span>(<span class="string">&quot;Please input your account: &quot;</span>)</span><br><span class="line">    password = <span class="built_in">input</span>(<span class="string">&quot;Please input your password: &quot;</span>)</span><br><span class="line">    res = &#123;</span><br><span class="line">        <span class="string">&#x27;account&#x27;</span>: account,</span><br><span class="line">        <span class="string">&#x27;password&#x27;</span>: password</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">print</span>(res)</span><br><span class="line">    <span class="comment"># 写入json</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(file_name, <span class="string">&quot;w+&quot;</span>) <span class="keyword">as</span> fp:</span><br><span class="line">        fp.write(json.dumps(res))</span><br><span class="line"><span class="comment"># 如果存在，说明之前已经写入</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="comment"># 读取账号密码</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(file_name, <span class="string">&quot;r&quot;</span>)<span class="keyword">as</span> fp:</span><br><span class="line">        res = json.loads(fp.read())</span><br><span class="line">        account = res[<span class="string">&#x27;account&#x27;</span>]</span><br><span class="line">        password = res[<span class="string">&#x27;password&#x27;</span>]</span><br><span class="line">headers = &#123;</span><br><span class="line">        <span class="string">&quot;X-Requested-With&quot;</span>: <span class="string">&quot;XMLHttpRequest&quot;</span>,</span><br><span class="line">        <span class="string">&quot;User-Agent&quot;</span>: <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36&quot;</span>,</span><br><span class="line">        <span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;application/x-www-form-urlencoded; charset=UTF-8&quot;</span>,     <span class="comment"># 必须指定，否则报404</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment"># RC4加密算法</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">do_encrypt_rc4</span>(<span class="params">src:<span class="built_in">str</span>, passwd:<span class="built_in">str</span></span>)-&gt;<span class="built_in">str</span>:</span><br><span class="line">    i, j, a, b, c = <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span></span><br><span class="line">    key, sbox = [], []</span><br><span class="line">    plen = <span class="built_in">len</span>(passwd)</span><br><span class="line">    size = <span class="built_in">len</span>(src)</span><br><span class="line">    output = <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 初始化密钥key和状态向量sbox</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">256</span>):</span><br><span class="line">        key.append(<span class="built_in">ord</span>(passwd[i % plen]))</span><br><span class="line">        sbox.append(i)</span><br><span class="line">    <span class="comment"># 状态向量打乱</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">256</span>):</span><br><span class="line">        j = (j + sbox[i] + key[i]) % <span class="number">256</span></span><br><span class="line">        temp = sbox[i]</span><br><span class="line">        sbox[i] = sbox[j]</span><br><span class="line">        sbox[j] = temp</span><br><span class="line">    <span class="comment"># 秘钥流的生成与加密</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(size):</span><br><span class="line">        <span class="comment"># 子密钥生成</span></span><br><span class="line">        a = (a + <span class="number">1</span>) % <span class="number">256</span></span><br><span class="line">        b = (b + sbox[a]) % <span class="number">256</span></span><br><span class="line">        temp = sbox[a]</span><br><span class="line">        sbox[a] = sbox[b]</span><br><span class="line">        sbox[b] = temp</span><br><span class="line">        c = (sbox[a] + sbox[b]) % <span class="number">256</span></span><br><span class="line">        <span class="comment"># 明文字节由子密钥异或加密</span></span><br><span class="line">        temp = <span class="built_in">ord</span>(src[i]) ^ sbox[c]</span><br><span class="line">        <span class="comment"># 密文字节转换成hex，格式对齐修正（取最后两位，若为一位（[0x0，0xF]），则改成[00, 0F]）</span></span><br><span class="line">        temp = <span class="built_in">str</span>(<span class="built_in">hex</span>(temp))[-<span class="number">2</span>:]</span><br><span class="line">        temp = temp.replace(<span class="string">&#x27;x&#x27;</span>, <span class="string">&#x27;0&#x27;</span>)</span><br><span class="line">        <span class="comment"># 输出</span></span><br><span class="line">        output += temp</span><br><span class="line">    <span class="keyword">return</span> output</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">auth_go</span>():</span><br><span class="line">    <span class="comment"># 请求网址</span></span><br><span class="line">    url = <span class="string">&quot;http://1.1.1.3/ac_portal/login.php&quot;</span></span><br><span class="line">    <span class="comment"># 请求头</span></span><br><span class="line">    <span class="comment"># headers = &#123;</span></span><br><span class="line">    <span class="comment">#     &quot;X-Requested-With&quot;: &quot;XMLHttpRequest&quot;,</span></span><br><span class="line">    <span class="comment">#     &quot;User-Agent&quot;: &quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36&quot;,</span></span><br><span class="line">    <span class="comment">#     &quot;Content-Type&quot;: &quot;application/x-www-form-urlencoded; charset=UTF-8&quot;,     # 必须指定，否则报404</span></span><br><span class="line">    <span class="comment"># &#125;</span></span><br><span class="line">    <span class="comment"># 时间戳（提取ms单位）</span></span><br><span class="line">    tag = <span class="built_in">int</span>(time.time()*<span class="number">1000</span>)</span><br><span class="line">    <span class="comment"># 利用RC4加密算法获取基于时间戳的密码</span></span><br><span class="line">    pwd = do_encrypt_rc4(password, <span class="built_in">str</span>(tag))</span><br><span class="line">    <span class="comment"># 账号、密码、时间戳写入payload报文</span></span><br><span class="line">    payload = <span class="string">f&quot;opr=pwdLogin&amp;userName=<span class="subst">&#123;account&#125;</span>&amp;pwd=<span class="subst">&#123;pwd&#125;</span>&amp;auth_tag=<span class="subst">&#123;tag&#125;</span>&amp;rememberPwd=1&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="comment"># 提交登录</span></span><br><span class="line"></span><br><span class="line">            res = requests.post(url, data=payload, headers=headers)</span><br><span class="line">            <span class="built_in">print</span>(res)</span><br><span class="line">            <span class="comment"># 输出登录结果</span></span><br><span class="line">            <span class="keyword">if</span> res.status_code == <span class="number">200</span> <span class="keyword">and</span> res.text.find(<span class="string">&quot;true&quot;</span>)&gt;<span class="number">0</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&quot;\033[7;32;47m<span class="subst">&#123;res.content.decode(<span class="string">&#x27;utf-8&#x27;</span>)&#125;</span> \033[0m&quot;</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&quot;\033[7;31;47m<span class="subst">&#123;res.content.decode(<span class="string">&#x27;utf-8&#x27;</span>)&#125;</span> \033[0m&quot;</span>)</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;\033[7;31;47m&quot;</span>, <span class="string">&quot;Login fail! Make sure input true account info!&quot;</span>, <span class="string">&quot;\033[0m&quot;</span>)</span><br><span class="line">                os.remove(file_name)</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;\033[7;36;47m&quot;</span>, <span class="string">&quot;Already clear account file.\n Restart EXE and input again.&quot;</span>, <span class="string">&quot;\033[0m&quot;</span>)</span><br><span class="line">            <span class="comment">#print(&quot;Press any key to exit...&quot;)</span></span><br><span class="line">            <span class="comment"># 等待退出</span></span><br><span class="line">            <span class="comment">#if ord(msvcrt.getch()):</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="comment"># 如果请求出错，大概率网络未连</span></span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> err:</span><br><span class="line">            <span class="comment"># 提示</span></span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;\033[7;31;47m&quot;</span>,<span class="string">&quot;Login Error！\tMaybe you need link wifi first?&quot;</span> ,<span class="string">&quot;\033[0m&quot;</span>)</span><br><span class="line">            <span class="comment"># 输出err</span></span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;\033[7;33;40m&quot;</span>, err,<span class="string">&quot;\033[0m&quot;</span>)</span><br><span class="line">            <span class="comment"># # 按“R”再次执行脚本，按其它按键退出</span></span><br><span class="line">            <span class="comment"># print(&quot;Press &#x27;R&#x27; to restart, or break...&quot;)</span></span><br><span class="line">            <span class="comment"># if ord(msvcrt.getch()) != 114:</span></span><br><span class="line">            <span class="comment">#     break</span></span><br><span class="line">            time.sleep(<span class="number">10</span>)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">ping_check</span>(<span class="params">ip_or_host</span>):</span><br><span class="line">    cmd = <span class="string">&quot;ping %s -n 1 &quot;</span> % ip_or_host</span><br><span class="line">    a = os.popen(cmd)</span><br><span class="line">    b = a.read().strip()</span><br><span class="line">    <span class="comment">#print(b)</span></span><br><span class="line">    <span class="keyword">if</span> <span class="string">&quot;100% 丢失&quot;</span> <span class="keyword">in</span> b:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="comment"># res = requests.get(&quot;https://baidu.com/&quot;, headers=headers)</span></span><br><span class="line">        <span class="comment"># if res.status_code != 200:</span></span><br><span class="line">        <span class="comment">#     auth_go()</span></span><br><span class="line">        res = ping_check(<span class="string">&quot;1.2.4.8&quot;</span>)</span><br><span class="line">        time.sleep(<span class="number">5</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> res:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;检测到网络断开，尝试认证网络！&quot;</span>)</span><br><span class="line">            auth_go()</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">main()</span><br></pre></td></tr></table></figure><h3 id="4、安装pyinstaller库，打包成exe程序，生产auth-net-exe"><a href="#4、安装pyinstaller库，打包成exe程序，生产auth-net-exe" class="headerlink" title="4、安装pyinstaller库，打包成exe程序，生产auth_net.exe"></a>4、安装pyinstaller库，打包成exe程序，生产auth_net.exe</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pip install pyinstaller</span><br><span class="line">pyinstaller -F aaaa.py</span><br><span class="line">#生成dist/aaaa.exe</span><br></pre></td></tr></table></figure><p>首次运行需要输入用户名密码进行认证，因此需要手动打开程序输入</p><p>后续脚本将账户信息保存到配置文件不需要再认证（除非删除Windows临时目录内的配置文件C:\Users\wsq\AppData\Local\Temp\user_account.json）</p><h3 id="5、创建Windows任务计划程序"><a href="#5、创建Windows任务计划程序" class="headerlink" title="5、创建Windows任务计划程序"></a>5、创建Windows任务计划程序</h3><p><img src="/../static/imgs/%E4%B8%8A%E7%BD%91%E8%AE%A4%E8%AF%81/image-20240626094621278.png" alt="image-20240626094621278"></p><p><img src="/../static/imgs/%E4%B8%8A%E7%BD%91%E8%AE%A4%E8%AF%81/image-20240626095237396.png" alt="image-20240626095237396"></p><h3 id="6、程序运行结果，每次开机自启动"><a href="#6、程序运行结果，每次开机自启动" class="headerlink" title="6、程序运行结果，每次开机自启动"></a>6、程序运行结果，每次开机自启动</h3><p><img src="/../static/imgs/%E4%B8%8A%E7%BD%91%E8%AE%A4%E8%AF%81/image-20240626094514131.png" alt="image-20240626094514131"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>于你</title>
      <link href="/2024/05/14/test/"/>
      <url>/2024/05/14/test/</url>
      
        <content type="html"><![CDATA[<h2 id="亲爱的小清清："><a href="#亲爱的小清清：" class="headerlink" title="亲爱的小清清："></a>亲爱的小清清：</h2><h1 id="你好呀！"><a href="#你好呀！" class="headerlink" title="你好呀！"></a>你好呀！</h1><h3 id="初始"><a href="#初始" class="headerlink" title="初始"></a>初始</h3><p>​        你是我生命中最珍贵的宝藏，自从第一次遇见你，我的内心深处就震荡起了情愫的波澜。在你的光芒中，我发现了人生中的灿烂和美好，感谢生命的安排让我与你相遇。</p><h3 id="相互倾听"><a href="#相互倾听" class="headerlink" title="相互倾听"></a>相互倾听</h3><p>​        你总是耐心的倾听我的内心世界，不断地鼓励着我去找寻梦想的方向。我也向你倾诉着内心的欢喜与烦恼，从中我们之间的了解与信任逐渐深入。</p><h3 id="同度岁月"><a href="#同度岁月" class="headerlink" title="同度岁月"></a>同度岁月</h3><p>​        不管生活中经历着什么风风雨雨，我们都能扶着彼此的手走过一段又一段困难时刻。那些温暖的刻录，像是一首首恬静美丽的旋律，在我们的记忆中流淌。</p><h3 id="情感的领域"><a href="#情感的领域" class="headerlink" title="情感的领域"></a>情感的领域</h3><p>​        当我和你在一起的时候，总是充满着温暖与喜悦。你的微笑是我无尽的力量，让我意识到只有与你一起同在，才是我一生所愿。</p><p>我的爱人，感谢你在我人生中的出现，让我们坚定信心，共同迎接未来的美好生活吧。</p>]]></content>
      
      
      <categories>
          
          <category> zmq </category>
          
      </categories>
      
      
        <tags>
            
            <tag> zmq </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Test</title>
      <link href="/2024/05/01/hello-world/"/>
      <url>/2024/05/01/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! 1This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ hexo new &quot;My New Post&quot;</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server1"><a href="#Run-server1" class="headerlink" title="Run server1"></a>Run server1</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">hexo generate</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
